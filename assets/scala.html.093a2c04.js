import{r as p,o,c,a as s,b as t,F as l,e,d as n}from"./app.c4dc980c.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},u=e(`<h1 id="scala" tabindex="-1"><a class="header-anchor" href="#scala" aria-hidden="true">#</a> Scala</h1><h2 id="install-syntax-highlighting" tabindex="-1"><a class="header-anchor" href="#install-syntax-highlighting" aria-hidden="true">#</a> Install Syntax Highlighting</h2><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token punctuation">:</span>TSInstall scala
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The support for Scala 3 like syntax is limited.</p><h2 id="install-language-server" tabindex="-1"><a class="header-anchor" href="#install-language-server" aria-hidden="true">#</a> Install Language Server</h2>`,5),k=n("To get scala LSP support working in Lunarvim, first you need to do the prerequisites listed "),d={href:"https://github.com/scalameta/nvim-metals#prerequisites",target:"_blank",rel:"noopener noreferrer"},m=n("here"),h=e(`<p>Then use coursier to install the metals language server so that it is available on your PATH:</p><p><code>coursier install metals</code></p><p>Also, you can install the scala formatter</p><p><code>coursier install scalafmt</code></p><h2 id="configure-lunarvim" tabindex="-1"><a class="header-anchor" href="#configure-lunarvim" aria-hidden="true">#</a> Configure Lunarvim</h2><p>Create a file called <code>~/.config/lvim/lua/user/metals.lua</code>:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token keyword">local</span> M <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

M<span class="token punctuation">.</span>config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">local</span> metals_config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;metals&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bare_config</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  metals_config<span class="token punctuation">.</span>on_attach <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;lvim.lsp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>common_on_attach
  metals_config<span class="token punctuation">.</span>settings <span class="token operator">=</span> <span class="token punctuation">{</span>
    showImplicitArguments <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">,</span>
    showInferredType <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
    excludedPackages <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  metals_config<span class="token punctuation">.</span>init_options<span class="token punctuation">.</span>statusBarProvider <span class="token operator">=</span> <span class="token keyword">false</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;metals&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">initialize_or_attach</span> <span class="token punctuation">{</span> metals_config <span class="token punctuation">}</span>
<span class="token keyword">end</span>

<span class="token keyword">return</span> M
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Add the following to your <code>config.lua</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>plugins <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span>
      <span class="token string">&quot;scalameta/nvim-metals&quot;</span><span class="token punctuation">,</span>
      config <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;user.metals&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">end</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_create_autocmd</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;BufEnter&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BufWinEnter&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  pattern <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;*.scala&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.sbt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.sc&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  callback <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;user.metals&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">end</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>When you open the first scala file, you should run <code>:MetalsInstall</code> in order to complete the plugin instalation.</p><h2 id="supported-formatters" tabindex="-1"><a class="header-anchor" href="#supported-formatters" aria-hidden="true">#</a> Supported formatters</h2>`,11),b=n("In most cases, isn't necessary enable the "),g={href:"https://scalameta.org/scalafmt/",target:"_blank",rel:"noopener noreferrer"},f=n("scalafmt"),_=n(" formatter, this is already integrated with metals to format on save creating a "),v=s("code",null,".scalafmt.conf",-1),q=n(" file in your project root, see more "),y={href:"https://scalameta.org/scalafmt/docs/configuration.html",target:"_blank",rel:"noopener noreferrer"},x=n("here"),w=e(`<div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>scala <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;scalafmt&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,1);function I(S,T){const a=p("ExternalLinkIcon");return o(),c(l,null,[u,s("p",null,[k,s("a",d,[m,t(a)])]),h,s("p",null,[b,s("a",g,[f,t(a)]),_,v,q,s("a",y,[x,t(a)])]),w],64)}var E=i(r,[["render",I]]);export{E as default};
